SQL (язык структуриванных запросов)

Столбцы (поля, атрибуты)
Строки (записи, котрежи)

SQLite

*.db, *.db3, *.sqlite, *.sqlite3

SELECT [ALL|DISTINCT] {*|столбец1[,столбец2]} 
FROM таблица [, таблица2]
WHERE условие
	=, ==, <>, !=, >, >=, <, <=
	выражение [NOT] BETWEEN начальное_значение AND конечное_значение
	выражение [NOT] LIKE шаблон_строки
		% - любое количество символов
		_ - один символ
	выражение [NOT] GLOB регулярное_выражение
		* - любое количество символов
		? - один символ
		. - любой одиночный символ
		[abc] - один из заданных символов
		[a-z0-9] - диапазон заданных символ
		^ - [^abc] - все кроме заданных символов		
	выражение IS [NOT] NULL 
	выражение [NOT] IN (набор значений)
GROUP BY (группировать по)
HAVING (условие)
ORDER BY имя_поля [ASC|DESC]

Переименовать таблицу
ALTER TABLE person
RENAME TO person_table

Добавление столбца
ALTER TABLE person_table
ADD COLUMN address TEXT NOT NULL DEFAULT "street"

переименование столбца
ALTER TABLE person_table
RENAME COLUMN address TO home_address

удаление столбца
ALTER TABLE person_table
DROP COLUMN home_address

Удаление таблицы
DROP TABLE person_table

Добавление новой строки
INSERT INTO имя_таблицы [(столбец_1[, столбец_n])]
VALUES(значение_1[, значение_n])
	
	
INSERT INTO имя_таблицы [(вставляемый_список_столбцов)]
SELECT список столбцов
FROM список_таблиц
WHERE условие

UPDATE имя_таблицы
SET столбец1=выражение1, столбец2=выражение2 # SET - установить
[WHERE условие]

DELETE FROM имя_таблицы
WHERE условие

DELETE FROM имя_таблицы

LIMIT количество_строк OFFSET смещение
LIMIT [смещение,] количество_строк


разработчики логической БД
разработчики физической БД

Функции агрегирования

SUM  (только с числами)
AVG  (только с числами)
COUNT 
MIN
MAX


SELECT COUNT(Client) as [Количество клиентов]
SELECT COUNT(Client) AS 'Количество клиентов'
SELECT COUNT(Client) AS Количество
SELECT COUNT(Client) Количество


pip install jinja2

{{ }} - выражение для вставки конструкции Python в шаблон
{% %} - спецификатор шаблона

{# #} - блок комментариев
# ## - строковый комментарий

{% for <выражение> %}
<тело цикла>
{% endfor %}

{% if <условие> %}

{% elif <условие> %}

{% else %}

{% endif %}

Макроопределения (=функция)

{% call[(параметры)] <вызов макроса> %}
<вложенный шаблон>
{% endcall %}

templates
	index.html
	
	header.html
	main.html
	footer.html
	dialogs.html
	
	page.html
	about.html
	
	
{% include <путь к файлу шаблона> %}

pip install Flask

flsk
	flsite.py
	
http://127.0.0.1:5000/
http://127.0.0.1:5000/index
http://127.0.0.1:5000/about


templates
		index.html
		about.html
		base.html
		contact.html
		page404.html
		login.html
		
static
	css
		style.css
	
int - должны присутствовать только цифры
float - можно записывать число с плавающей точкой
path - можно использовать любые допустимые символы
		URL плюс символ слеша
		
flash()
get_flashed_messages()

import os
os.urandom(20).hex()


from flsk.flsite import create_db
create_db()


pip install django	

first

cd first

django-admin startproject password_generator_project

python manage.py runserver

python manage.py runserver 1.2.3.4:4000

python manage.py startapp generator

templates
	generator
		home.html
		
http://127.0.0.1:8000/?length=2
http://127.0.0.1:8000/?length=3


python manage.py collectstatic

second

django-admin startproject personal_portfolio

python manage.py startapp skills
python manage.py startapp blog

pip install Pillow

python manage.py makemigrations
python manage.py migrate


python manage.py createsuperuser




